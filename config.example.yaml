# Claude Code Project Configuration Example
# Copy this file to your project's .claude/config.yaml and customize

# Project metadata
project:
  name: "my-project"
  type: "web-application"  # web-application, api, cli, library, etc.
  description: "Project description"

# Language and framework configuration
language:
  primary: "php"      # php, python, javascript, java, etc.
  version: "8.2"      # Language version

framework:
  name: "cakephp"     # cakephp, laravel, django, express, etc.
  version: "4.4"      # Framework version

# Output preferences
output:
  language: "ja"      # Output language: "en" (English), "ja" (Japanese), "es" (Spanish), etc.
  # This affects:
  # - Test documentation (保証対象/失敗時の損失 comments)
  # - Error messages in generated code
  # - Code comments
  # - Generated documentation

  code_style:
    # Language-specific: PSR-12, PEP-8, Airbnb, Google, etc.
    standard: "PSR-12"

  documentation:
    # Documentation format preference
    format: "phpdoc"    # phpdoc, jsdoc, google-docstring, etc.
    # Structure language (for .work/*.yaml files)
    structure_language: "en"  # Always use English for YAML structure
    # Content language (for user-facing content)
    content_language: "ja"    # Can be any language

# Test configuration
testing:
  framework: "phpunit"
  execution:
    method: "docker"
    command: "docker compose -f docker-compose.test.yml run --rm web"
  coverage:
    target: 80  # Target coverage percentage

# Database configuration
database:
  architecture: "multi-tenant"  # single-tenant, multi-tenant
  # For multi-tenant projects
  pattern: "per-company"  # per-company, per-tenant, shared
  naming: "[app_prefix]_company_%d"

# Skills to load for this project
skills:
  # Generic skills (always loaded)
  generic:
    - "requirement-analyzer"
    - "design-patterns"

  # Language-specific skills
  language:
    - "php/coding-standards"
    - "php/security-patterns"
    - "php/testing-standards"

  # Framework-specific skills
  framework:
    - "php-cakephp/migration-checker"
    - "php-cakephp/fixture-generator"
    - "php-cakephp/test-validator"
    - "php-cakephp/code-implementer"
    - "php-cakephp/multi-tenant-db-handler"

# Agents available for this project
agents:
  code-developer:
    skills:
      - "php/coding-standards"
      - "php-cakephp/code-implementer"

  test-strategist:
    skills:
      - "php/testing-standards"
      - "php-cakephp/test-validator"

  design-architect:
    skills:
      - "php-cakephp/database-designer"
      - "php-cakephp/multi-tenant-db-handler"

# Repository configuration (for multi-repo projects)
repository:
  structure: "multi"  # single, multi
  # For multi-repo projects
  repositories:
    - name: "admin"
      path: "../admin"
      type: "web"
    - name: "user"
      path: "../user"
      type: "web"
    - name: "batch"
      path: "../batch"
      type: "cli"

# Paths
paths:
  src: "src"
  tests: "tests"
  config: "config"
  migrations: "config/Migrations"

# Additional project-specific configuration
custom:
  # Add any project-specific settings here
  # These can be referenced in skills/agents as needed
  company_id_constant: "PHPUNIT_COMPANY_ID"
  test_company_id: 9999
